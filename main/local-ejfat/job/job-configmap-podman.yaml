kind: ConfigMap
apiVersion: v1
metadata:
  name: wf-{{ .Values.Deployment.name }}
  namespace: {{ .Values.Deployment.namespace }}
data:
  wf.sh: |
    #!/bin/bash
    podman rm -f vk-exporter vd-ersap

    # ... existing code ...

    # Pull and run the podman image
    echo -e "set session s1\nset outputFilePrefix s1\nset outputDir \$HOME/ersap/output\nset logDir \$HOME/ersap/log\nset threads {{.Values.Deployment.cpuUsage}}\nrun local" > ~/x.ersap

    podman run --name vd-ersap -d --rm --network=host -e "LB_HOST=$LB_HOST" -e "PR_HOST=$PR_HOST" --entrypoint={{ .Values.Deployment.ersapSettings.cmd }} {{ .Values.Deployment.ersapSettings.image }}

    # Get the ID of the last run container
    export CONTAINER_ID=$(podman ps -l -q)

    # Store the container ID for later use
    echo $CONTAINER_ID > $POD_ROOT_PATH/containers/wf/containerid

    # Wait for the container to start
    sleep 10

    # Get the process group ID (PGID) of the process in the container with "UseNUMA" in its command
    export PGID=$(podman top $CONTAINER_ID -eo pid,cmd | grep UseNUMA | awk '{print $1}')

    # ... existing code ...

    # Kill the container
    podman stop $CONTAINER_ID; podman rm $CONTAINER_ID

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: prom-{{ .Values.Deployment.name }}
  namespace: {{ .Values.Deployment.namespace }}
data:
  prom.sh: |
    #!/bin/bash

    export GROUP_FOR_CONFIG={{ "{{.ExeBase}}:{{.Username}}:{{.Comm}}" | quote }}
    export CMDS_FOR_CONFIG="java"

    sleep 8
    
    podman run --name vk-exporter -d -e GROUP_FOR_CONFIG=$GROUP_FOR_CONFIG -e CMDS_FOR_CONFIG=$CMDS_FOR_CONFIG -e PROCESS_EXPORTER_PORT=$PROCESS_EXPORTER_PORT \
     --network=host -v /proc:/host_proc jlabtsai/process-exporter:pgid-go